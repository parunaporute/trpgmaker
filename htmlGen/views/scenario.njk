<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="UTF-8" />
  <title>シンプルTRPG</title>
  <meta name="viewport" content="width=device-width,initial-scale=1.0" />
  <link rel="stylesheet" href="styles.css" />
{% include "partials/inits.njk" %}
</head>

<body>
{% include "partials/top.njk"%}
  <!-- ▼ トークン調整ボタン -->
  <!--button id="token-adjust-button">トークン調整</button-->
  <!-- トークン調整モーダル -->
  <div id="token-adjust-modal" class="modal">
    <div class="modal-content" style="max-width:500px;">
      <h2>英語データの生成</h2>
      <p id="token-adjust-message"></p>
      <button id="token-adjust-ok-button">OK</button>
      <button id="token-adjust-cancel-button">キャンセル</button>
      <p id="token-adjust-progress" style="margin-top:20px;white-space:pre;"></p>
    </div>
  </div>

  <!-- ネタバレボタン（目的達成型のみ表示） -->
  <!--button id="spoiler-button" style="display:none; background-color:#E91E63; margin-top:20px; float:right;">
    ネタバレ
  </button-->

  <!-- ネタバレモーダル -->
  <div id="spoiler-modal" class="modal">
    <div class="modal-content">
      <h2>クリア条件</h2>
      <p id="clear-condition-text" style="white-space:pre-wrap;"></p>
      <button id="close-spoiler-modal">閉じる</button>
    </div>
  </div>

  <div class="container">
    <!-- シーン履歴 (初期非表示) -->
    <div id="scene-history" class="scene-history" style="display:none;"></div>

    <!-- ゲーム画面セクション -->
    <div class="game-section" style="display:none;">
      <div id="story" style="margin-bottom:20px;"></div>
      <div id="last-scene-images" style="margin-bottom:20px;"></div>
      <div id="last-scene-added" class="r-flexbox"></div>

      <!-- 画像生成ボタン -->
      <!--
          ここにあった:
          <button id="image-auto-generate-button"><div class="iconmoon icon-magic-wand"></div>挿絵を生成</button>
          は削除しました
      -->

      <div id="player-action">プレイヤーの行動を入力してください</div>
      <!-- 回答候補を生成ボタンとチェックボックス -->
      <div style="margin-top:10px;display: flex;">
        <button id="generate-action-candidates-button">回答候補を生成</button>
        <label style="margin-left:10px;display: flex;">
          <input type="checkbox" id="auto-generate-candidates-checkbox" />
          <p style="width: 100%;">自動的に生成する</p>
        </label>
      </div>
      <div id="action-candidates-container" style="margin-top:10px;"></div>

      <div id="action-candidates-container" style="margin-top:10px;"></div>

      <textarea id="player-input" rows="4" placeholder="プレイヤーの行動を入力..."></textarea>

      <div class="c-flexbox">
        <button id="next-scene" class="important">次のシーン</button>
      </div>

    </div>
    <div class="c-flexbox">
      <!-- ▼ エンディング関連ボタン&モーダル（追加） -->
      <button id="ending-button" style="display:none;">エンディング</button>
      <button id="clear-ending-button" style="display:none;">クリア・エンディング</button>

    </div>

  </div>

  <!-- 全セクションを閲覧するボタン -->
  <button id="view-all-sections-button">全セクションを閲覧する</button>

  <!-- 全セクション表示モーダル -->
  <div id="all-sections-modal" class="modal">
    <div class="modal-content">
      <h2>全セクション一覧</h2>
      <div id="all-sections-content" style="white-space:pre-wrap; text-align:left;"></div>
      <button id="close-all-sections-modal" style="margin-top:10px;">閉じる</button>
    </div>
  </div>

  <!-- ローディングモーダル -->
  <div id="loading-modal" class="modal">
    <div class="modal-content">
      <p>応答を待っています...</p>
      <button id="cancel-request-button">キャンセル</button>
    </div>
  </div>

  <!-- カスタム画像生成モーダル -->
  <div id="image-prompt-modal" class="modal">
    <div class="modal-content" style="max-width:400px;">
      <p>画像生成のプロンプトを編集してください</p>
      <textarea id="image-custom-prompt" rows="5" style="width:100%;"></textarea>
      <div style="margin-top:10px;">
        <button id="image-custom-generate-button">生成</button>
        <button id="image-custom-cancel-button">キャンセル</button>
      </div>
    </div>
  </div>

  <!-- カードプレビューモーダル -->
  <div id="card-preview-modal" class="modal">
    <div class="modal-content" style="max-width:400px;">
      <h2>新しいカード</h2>
      <div id="preview-card-container"></div>

      <div style="margin-top:10px;">
        <button id="add-to-gachabox-button">倉庫に追加</button>
        <button id="cancel-card-preview-button">キャンセル</button>
      </div>
    </div>
  </div>

  <!-- パーティ表示用モーダル -->
  <div id="party-modal" class="modal">
    <div class="modal-content">
      <h2>パーティ確認</h2>
      <button id="close-party-modal">閉じる</button>
      <div id="party-modal-card-container"></div>
    </div>
  </div>

  <!-- 探索型の場合のみ表示される「カードを取得」ボタン -->
  <button id="get-card-button" style="display:none;">
    カードを取得する
  </button>

  <div id="ending-modal" class="modal">
    <div class="modal-content" style="padding: 10vw;">
      <h2 id="ending-modal-title"></h2>
      <div id="ending-modal-story" style="white-space:pre-wrap; text-align:left; margin-top:10px;"></div>
      <button id="ending-modal-close-button" style="margin-top:10px;">閉じる</button>
      <button id="ending-modal-regenerate-button" style="margin-top:10px;">再生成</button>
    </div>
  </div>
  <!-- ▲ エンディング関連ここまで -->

  <!-- スクリプト群 -->
  <script src="js/indexedDB.js"></script>
  <script src="js/scene.js"></script>
  <script src="js/main.js"></script>
  <script src="js/gachaCore.js"></script>
  <script src="js/scenario.js"></script>

  <script>
    window.addEventListener("load", async () => {
      await initIndexedDB();
      await initBackground("scenario");
    });

    // ▼ 「編集して生成(カスタム)」ボタンをクリック → openImagePromptModal() 呼び出し
    window.addEventListener("DOMContentLoaded", () => {
      const customBtn = document.getElementById("image-prompt-modal-button");
      if (customBtn) {
        customBtn.addEventListener("click", () => {
          openImagePromptModal();
        });
      }
    });
    window.addEventListener('DOMContentLoaded', () => {
      const autoCbx = document.getElementById("auto-generate-candidates-checkbox");
      if (autoCbx) {
        // 初期状態読み込み
        autoCbx.checked = (localStorage.getItem("autoGenerateCandidates") === "true");

        // 変更時に保存
        autoCbx.addEventListener("change", () => {
          localStorage.setItem("autoGenerateCandidates", autoCbx.checked);
        });
      }
    });
  </script>
</body>

</html>